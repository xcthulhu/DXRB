This is an efficiency calculation for a proposed mission to measure the Diffuse X-Ray Background.  Here are some previous papers regarding this measurement, and the A4 catalogue which introduces systematic error in our calculation:

A4 DXRB
http://adsabs.harvard.edu/abs/1999ApJ...520..124G

A4 catalog
http://adsabs.harvard.edu/cgi-bin/bib_query?1984ApJS...54..581L

You can get an electronic version of the A4 catalog by going to the following page:
http://heasarc.gsfc.nasa.gov/db-perl/W3Browse/w3table.pl?tablehead=name%3Dxray&Action=More+Options

You will need to set "database_table" to "A4"

---------------------

eff.py models a sun-spinner, spinning around once a day
It prints a tab seperated table of half-angle versus %non-contamination over the course of a year.

The algorithm works as follows:

<pseudocode>
Given a half-angle tau, we loop through every day for a year (or some other timestep given by the variable stepsize), starting with midnight 1/1/1971.

	- Every day (denoted by the variable t), we use pyephem to 
	  calculate the position of the sun as a vector on the unit sphere 
	  around the earth (this is sv(t)).  

	  We then loop through every angle theta in [0,2pi], using some small 
	  increment (this is set by pv_res)

		- For every angle theta, a unit-sphere pointing vector 
		  orthogonal to the sun vector is obtained (this is pv_),
		  using the following:

		  b3 = sv(t) x [0,0,1]
		  pv_ = sv(t) * cos(theta) + b3 * sin(theta)
  
                - We then collect all of the sources xv from
                  the A4 catalogue + GSR1915 where xv.pv_ >= cos(tau) 

			- if there are no sources, we increment hgram[0]
                        - if there was a source, let lum = the combined
                          luminosities of all of the sources, where the
                          crab nebula is said to have luminosity = 1.
                          In this case we increment hgram[(lum // binsize)+1]

	- After all that nested looping, we calculate
 
                                            hgram[bin_num]
		rho[bin_num] =   ------------------------------
                                  pv_res*(365*24*60*60/stepsize)

          For each bin in the histogram hgram, indexed by bin_num. 
          This gives the frequency in which the sun-spinner was exposed to
          luminosity falling in that bin.

          Specifically, this data should be interpreted as follows:

	  • If this rho[0] = 1, then the detector was never contaminated in the 
            entire loop.  
	    If rho[0]=0 then there was always at least one source seen by 
            the detector.

          • rho[1] represents the proportion of the time that the contamination 
            was in the (0,binsize) interval, in terms of crab nebula 
            luminosities (crabs). In turn, rho[2] represents the % of time 
            where there the contamination was in the [binsize,2*binsize) crab 
            range.  

          • In general, rho[n] is the % of time where the contamination was in 
            the [(n-1)*binsize, n*binsize) range.

	  The final step is to print a line, for each bin_num, containing the 
          list: 
              [tau, bin_num*binsize, rho[bin_num]]

          Seperated by tabs.  
</pseudocode>

This is the routine used to generate the table in table.tsv
